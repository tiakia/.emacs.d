;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "todo.org" "d:/workspace/node-reptile/todo.org" org-mode) (def-buffer "USE.md" "c:/Users/TK/.emacs.d/USE.md" markdown-mode) (def-buffer "index.js" "d:/workspace/node-reptile/index.js" web-mode) (def-buffer "init-local.el" "c:/Users/TK/.emacs.d/lisp/init-local.el" emacs-lisp-mode) (def-buffer "TODO" "d:/programs/emacs/share/emacs/25.3/etc/TODO" todo-mode) (def-buffer "init.el" "c:/Users/TK/.emacs.d/init.el" emacs-lisp-mode) (def-buffer ".notes" nil fundamental-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 160) (min-pixel-width . 200) (min-pixel-height-ignore . 120) (min-pixel-width-ignore . 80) (min-pixel-height-safe . 40) (min-pixel-width-safe . 40)) hc (pixel-width . 1366) (pixel-height . 695) (total-width . 137) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (vc (pixel-width . 686) (pixel-height . 695) (total-width . 69) (total-height . 35) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 355) (total-width . 69) (total-height . 18) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Org Agenda(L)*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 133) (start . 1))) (leaf (last . t) (pixel-width . 686) (pixel-height . 340) (total-width . 69) (total-height . 17) (normal-height . 0.5) (normal-width . 1.0) (buffer "todo.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 26) (start . 1)))) (leaf (last . t) (pixel-width . 680) (pixel-height . 695) (total-width . 68) (total-height . 35) (normal-height . 1.0) (normal-width . 0.5) (buffer "USE.md" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 124) (start . 1))))) (def-params nil) t nil nil))